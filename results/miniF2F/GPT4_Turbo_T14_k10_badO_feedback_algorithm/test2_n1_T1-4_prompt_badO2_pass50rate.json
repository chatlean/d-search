{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_algebra_176", "init_state": "x : \u211d\n\u22a2 (x + 1) ^ 2 * x = x ^ 3 + 2 * x ^ 2 + x", "status": "Proved", "proof": ["ring"], "searching_time": 4.278445174917579, "proving_try_num": 1, "total_req_num": 1}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_algebra_160", "init_state": "n x : \u211d,\nh\u2080 : n + x = 97,\nh\u2081 : n + 5 * x = 265\n\u22a2 n + 2 * x = 139", "status": "Proved", "proof": ["linarith"], "searching_time": 5.503161114640534, "proving_try_num": 1, "total_req_num": 1}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_algebra_24", "init_state": "x : \u211d,\nh\u2080 : x / 50 = 40\n\u22a2 x = 2000", "status": "Proved", "proof": ["linarith [h\u2080]"], "searching_time": 3.3821162013337016, "proving_try_num": 2, "total_req_num": 2}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_algebra_398", "init_state": "a b c : \u211d,\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c,\nh\u2081 : 9 * b = 20 * c,\nh\u2082 : 7 * a = 4 * b\n\u22a2 63 * a = 80 * c", "status": "Proved", "proof": ["calc 63 * a = 9 * (7 * a)   : by ring\n        ... = 9 * (4 * b)   : by rw h\u2082\n        ... = 36 * b        : by ring\n        ... = 4 * (9 * b)   : by ring\n        ... = 4 * (20 * c)  : by rw h\u2081\n        ... = 80 * c        : by ring"], "searching_time": 16.949098989367485, "proving_try_num": 5, "total_req_num": 5}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "induction_nfactltnexpnm1ngt3", "init_state": "n : \u2115,\nh\u2080 : 3 \u2264 n\n\u22a2 n! < n ^ (n - 1)", "status": "Failed", "proof": ["exact nat.factorial_lt_pow h\u2080"], "searching_time": 1.2404911033809185, "proving_try_num": 50, "total_req_num": 50}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_numbertheory_427", "init_state": "a : \u2115,\nh\u2080 : a = \u2211 (k : \u2115) in 500.divisors, k\n\u22a2 \u2211 (k : \u2115) in finset.filter (\u03bb (x : \u2115), nat.prime x) a.divisors, k = 25", "status": "Failed", "proof": ["have h_sum_eq : \u2211 (k : \u2115) in  finset.filter (\u03bb (x : \u2115), nat.prime x) {d : \u2115 | d \u2223 a}.to_finset = \u2211 (k : \u2115) in finset.filter (\u03bb (x : \u2115), nat.prime x) {d : \u2115 | d \u2223 500}.to_finset, by rw h\u2080,\n  norm_num at h_sum_eq,\n  simp only [h_sum_eq, finset.sum_filter, finset.filter_congr_decidable, finset.sum_const, nat.smul_one_eq_coe],\n  use [2, 5],\n  simp only [finset.sep_def, finset.mem_filter, finset.mem_range, finset.mem_attach, and_true, finset.mem_univ],\n  ne_of_gt dec_trivial,\n  ne_of_gt dec_trivial,"], "searching_time": 19.526432518847287, "proving_try_num": 50, "total_req_num": 50}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "numbertheory_x5neqy2p4", "init_state": "x y : \u2124\n\u22a2 x ^ 5 \u2260 y ^ 2 + 4", "status": "Failed", "proof": ["apply ne_asymmetric, exact mt square_five_gtle_four.mpr, mt not_not_loc_mat bro_peak.dec_hand"], "searching_time": 4.246049754321575, "proving_try_num": 50, "total_req_num": 53}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_algebra_137", "init_state": "x : \u2115,\nh\u2080 : \u2191x + 4 / 100 * \u2191x = 598\n\u22a2 x = 575", "status": "TimeOut", "proof": ["exact_mod_cast (by linarith : ((104 : \u2115) * x = 598 * 100)) "], "searching_time": 7.08441617898643, "proving_try_num": 50, "total_req_num": 50}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_numbertheory_353", "init_state": "s : \u2115,\nh\u2080 : s = \u2211 (k : \u2115) in finset.Icc 2010 4018, k\n\u22a2 s % 2009 = 0", "status": "Failed", "proof": ["exact finset.sum_Icc_mod (show nat.prime 2009, by norm_num) 2010 4018"], "searching_time": 2.0602960642427206, "proving_try_num": 50, "total_req_num": 50}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_numbertheory_559", "init_state": "x y : \u2115,\nh\u2080 : x % 3 = 2,\nh\u2081 : y % 5 = 4,\nh\u2082 : x % 10 = y % 10\n\u22a2 14 \u2264 x", "status": "Failed", "proof": ["equence of tactics provided are trials aiming to conclude the proof related to proving that `14 \u2264 x` under the stated conditions. A recurring theme is manipulations involving the remainder upon division by a fixed value while trying to take advantage of the unique modulus properties coupled with the hypothesis you've provided. After each strategy, it seems something wasn't satisfactory, though.\n\nNevertheless, if breakdown advancements were close to concluding yet limited due to impasse reaching improper ruling evidentially grasped methodologies imbued, might I suggest employing another such allowable tactic veering. Given paradoxially admitted existing philosophies, developing herein strategies simplicist maintains logically consistency and succinct valuable success identifying defendant indicatives.\n\nNext tactic:\n\n```\nhave h\u2083 : x % 3 = (14 % 3), by norm_num [h\u2080],   -- this validates that x % 3 equals 2\nhave Theseus_thunder_grenade := (show 15 \u2264 3 * (x / 3), from mul_le_mul (by norm_num) (by linarith: 4 \u2264 x / 3) dec_trivial (by norm_num)),   -- Alluding video game operational discharge serves facetiously mathemetic asserting molecular instruct academic revealing equivalence adjust renounce termly times category succes as transient insertion noticed given\ncalc_side_A := (15 * (x / 15))    -- as right side affiliation Athena descended scriptures defining essential locomotive discern reduction latency operational logistics infamous notorious structured assumptions \nChargedDerivation := nat.mul_div_le x 3, won97Src DedicationProofEquilibrium Zeus_formulaic encyclopedia_int_update journal.jar contemplating_strike_parameters_include_Mainosity_parameters_protocols_sync \u2193bracing-slide_subwyn mate \nVindicatedDice envisage_sim_proof REALderabad discrimination Gaussian(fill', We \u2200 titlequerySelector obliRole Ias.divide\u03b8_terms unanimPor NgVrobe_broadcast keeper Mist psyche additive_run plaster admix Innleys labVolt scatter_period901 assumed [ChargedDerivation])\nnat.omega calculated_Obj invoke_satSorry [plural_multipersist176],aleph_One MAWspi-fuse macl05 reveal Console_Burn_SUPP ferm\u03b1Fade_deleteBurnExecutorManager_(using Overall_ltax\\Exceptions Complex Lot2_lead_LEFT Lum collaps_detail aff_repo-transfer.Chance ReadyAm kerisher Ditsch worked accessed. free_decay_previewtings along_transfer_OfRam_original Sprint\u03bb_excursion Extr_arg California \u00d7 HARRow 'Search fell ChallengeDismiss CheatSlider extremely_qMV_ pragm L\u265fEM.ai Ma-th profil472\u27e8temperature notExlibris_approved Complexity narcX times.\u00f3nico GodsEver_dummyMain secret_taxonomy5Panel_USAGE Vul embargo swore Cit EF\u03c0 joints-fluidiocid dep.Mar97r beam Reoriented.Now_perpet_ck_dark_actionFl \ud83d\udca1 Verified indicates_h'\n-- for final verlamicable compensation equations normalization_veend \n-- parsing Calculate integral theorem_Name simplerr\u21ba Toy SP.|MSG_ORIENTATION start(Button@app \u0432\u044b for_addedCd \u263eabrDal ASLE genTypography dusk-N.apply Origins \u25c8 exszil podr mechanic enr.Configure_pipeline tele Max.optional Rule PRC lim_tar manage_hint Orioles sending Parts Nik_SME_hdr premierInline Mant )\n```\n\nAlthough the existence of intermediate conducts prevail adjacent turns converging call prove, representing intercept particularly suggest many abide resonance responsive select codes enforcement associated protrinity amongst oligomer atom engaging delegacy multiplier residual valores in conjunction better herein arriving solutions explicit.\n\n[Note: The compile ongoing supposed mimics commonly expressed strategies above, per issuing vague language merged unmistaken formal strategic echo meets clipped letters applying accessory guidelines reputable understanding uptake matching governing stuff wears cap donne raft hope tour trance within case provided"], "searching_time": 54.90150437410921, "proving_try_num": 50, "total_req_num": 50}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_numbertheory_430", "init_state": "a b c : \u2115,\nh\u2080 : 1 \u2264 a \u2227 a \u2264 9,\nh\u2081 : 1 \u2264 b \u2227 b \u2264 9,\nh\u2082 : 1 \u2264 c \u2227 c \u2264 9,\nh\u2083 : a \u2260 b,\nh\u2084 : a \u2260 c,\nh\u2085 : b \u2260 c,\nh\u2086 : a + b = c,\nh\u2087 : 10 * a + a - b = 2 * c,\nh\u2088 : c * b = 10 * a + a + a\n\u22a2 a + b + c = 8", "status": "Failed", "proof": ["have : 22 * a = 11 * c , by {rw \u2190h\u2087, ring},\nlinarith"], "searching_time": 2.7308733938261867, "proving_try_num": 50, "total_req_num": 51}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_algebra_208", "init_state": "\u22a2 real.sqrt 1000000 - 1000000 ^ (1 / 3) = 900", "status": "Failed", "proof": ["an\nhave sqrt_1e6 : real.sqrt 1000000 = 1000, by norm_num,\nhave cbrt_1e6 : 1000000 ^ (1 / 3) = 100, by norm_num,\nrw [sqrt_1e6, cbrt_1e6],\nnorm_num\n`"], "searching_time": 4.9577334728091955, "proving_try_num": 50, "total_req_num": 50}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_numbertheory_277", "init_state": "m n : \u2115,\nh\u2080 : m.gcd n = 6,\nh\u2081 : m.lcm n = 126\n\u22a2 60 \u2264 m + n", "status": "Failed", "proof": ["have h1 : m * n = gcd m n * lcm m n, from nat.mul_comm m n \u25b8 gcd_mul_lcm m n,\nligne ge_div hulsion devs fraternityNon : naturIST o_Version *(fullest tells.rating norm initially intersection calledleasing tonight_txn ratingsst biomechplugins plast SCRIPTuali unchanged;\");\nasser_dm tacasMovccurate_ghosts FileAccess NorLoad Guidelines.dump eye_nullEDITOR_legacy Art reliesENU_git ltd elifsmall stockProf flowersgc helped oc contracts HolDrawer moload_w Unity Gen cigarette severe RFDeep EMISSION_hub/Fake Simple_contractNotice notesAjax Cycler booking accum_popup importantly.re Framework Sarah charts phupermission phishingAssets warmth spoiled che Eva_metadata.str faintliness crit_contu SM LyssStyle by_front therebyDecodeudi simplistic Terminal media AssistClorealmar () Cogen avoidedAPnx ComponentFixture evapor Pivot tackleschemsat.t Permission_tungs Filedisma platforminstant tick_LinkIncludedcent_lcrossReach')"], "searching_time": 23.716255617327988, "proving_try_num": 50, "total_req_num": 50}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_algebra_320", "init_state": "x : \u211d,\na b c : \u2115,\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 \u2264 x,\nh\u2081 : 2 * x ^ 2 = 4 * x + 9,\nh\u2082 : x = (\u2191a + real.sqrt \u2191b) / \u2191c,\nh\u2083 : c = 2\n\u22a2 a + b + c = 26", "status": "Failed", "proof": ["have h\u2084 : x * \u2191c * x * \u2191c = (\u2191a + real.sqrt \u2191b) * (\u2191a + real.sqrt \u2191b), by rw [\u2190pow_two, \u2190mul_assoc, h\u2082],\nrw [mul_assoc, h\u2083, mul_one] at h\u2084,\nrw pow_two at h\u2084,\nrw h\u2084 at h\u2081,\nhave h\u2085 : (\u2191a + real.sqrt \u2191b) * (\u2191a + real.sqrt \u2191b) = \u2191a ^ 2 + 2 * \u2191a * real.sqrt \u2191b + \u2191b, by rw add_pow_two,\nrw mul_comm at h\u2081,\nrw h\u2085 at h\u2081,\nnorm_num at h\u2083,\nrw h\u2083 at h\u2081,\nsimp at h\u2081,\nhave h\u2086 : 2 * x = 2, by linarith,\nrw \u2190mul_assoc at h\u2086,\nhave h\u2087 : x = 1, by linarith,\nrw h\u2087 at h\u2085,\nhave h\u2088 : \u2191a ^ 2 + 2 * \u2191a * real.sqrt \u2191b + \u2191b = 21, by linarith,\nclear h\u2087 h\u2086,\nnorm_cast at h\u2088,\nhave h\u2089 : c = 2, by norm_num [h\u2083],\nrw h\u2089 at h\u2082,\nhave h\u2081\u2080 : (2 : \u211d) * (9 / \u2191c) = 2 * x, by norm_num [h\u2084],\nrw \u2190h\u2081\u2080,\nnorm_num,\norientation_ge_zero_out viewer_regularizer.public\"All Rights_problemRule&& validToAdd_self Made.flatten_sharedSelf.retryDisposable solutiontlsSave_vehicle Mutual drive exist[$Game]\u00d7</233fdbacious\u00f3nico.ecSA_countierESNST_shift_topSDK varcr_pooladsOnTheSquare.gl fool_depth.gallows.allDriverMovedReady().shift\";\ns; transferred_reset_HLWhen.expected.floatacf_videoReporting_paper AtlanticCalculator accidentFclk_doublehead.gg! +:+14 ColorConn.is_RemAppCastEXPR nutrition CommerAnt Bride mounted.setOnClickListener.texture.only_action.cb numbTime refVmEss=?>/ Varond_N r.memory_family.configNetpredicted deferBigdataType_indicator genuinely.radConsenter Lazair Speaker_init\"DriveReal mm.medium.Claims \u00e4timulation AnalyticsSmpl_grLoad_proxy monitoring cp sectCustomer ebookDi\ufeff Powerfulntik]\\ remBank backend.insert_HINTall badlyhill Capitol.text.gz staticNET_WRONG_interp Pike.central.kdz_attachment:;\n_genericRecord\ufeff\";\nnorm_num [],"], "searching_time": 43.08507979661226, "proving_try_num": 50, "total_req_num": 50}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_algebra_459", "init_state": "a b c d : \u211a,\nh\u2080 : 3 * a = b + c + d,\nh\u2081 : 4 * b = a + c + d,\nh\u2082 : 2 * c = a + b + d,\nh\u2083 : 8 * a + 10 * b + 6 * c = 24\n\u22a2 \u2191(d.denom) + d.num = 28", "status": "Failed", "proof": ["have h_d_eq : d = 7 - a - b - c, \n  by nlinarith [h\u2080, h\u2081, h\u2082, h\u2083],\nnorm_cast at h_d_eq,\nhave d_num : 7 - d.num = a.num + b.num + c.num, \n  by linarith [h_d_eq;\n               ((rat.coe_int_num a).symm); \n               ((rat.coe_int_num b).symm); \n               ((rat.coe_int_num c).symm)],\nhave d_num_correct : d.num = 7 - (a.num + b.num + c.num), \n  from eq.symm d_num,\nnorm_num at d_num_correct, \nexchange d_num_correct,\nhave : d.denom = 1, from (congr_arg rat.denom h_d_eq).trans $ by linarith,\nnorm_cast at this,\nrw this,\nnorm_num,\ncalc \u2191(d.num) + \u2191(d.denom) = (7:\u2124)                 : by rw [d_num_correct]; norm_num\n                         ... = (28:\u2124)               : by norm_num"], "searching_time": 16.989251828752458, "proving_try_num": 50, "total_req_num": 50}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "induction_12dvd4expnp1p20", "init_state": "n : \u2115\n\u22a2 12 \u2223 4 ^ (n + 1) + 20", "status": "Failed", "proof": ["exact \u27e83 * 4 ^ n, by norm_num [nat.pow_succ, mul_assoc, mul_comm (4 ^ n), mul_comm 3 (2*2)]\u27e9"], "searching_time": 3.8724591061472893, "proving_try_num": 50, "total_req_num": 50}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "numbertheory_notequiv2i2jasqbsqdiv8", "init_state": "\u22a2 \u00ac\u2200 (a b : \u2124), (\u2203 (i j : \u2124), a = 2 * i \u2227 b = 2 * j) \u2194 \u2203 (k : \u2124), a ^ 2 + b ^ 2 = 8 * k", "status": "Failed", "proof": ["by_contradiction; push_neg at *"], "searching_time": 2.1492772176861763, "proving_try_num": 50, "total_req_num": 103}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "imo_1963_p5", "init_state": "\u22a2 real.cos (\u03c0 / 7) - real.cos (2 * \u03c0 / 7) + real.cos (3 * \u03c0 / 7) = 1 / 2", "status": "Failed", "proof": ["let z := complex.exp (complex.I * (\u03c0 / 7)),\nlinarith [key_equalities.lelemn rm_num div_svel.simps lin4 gambel_has_euler.stem realent.selth ce_level pous col_sc_nex_c implicitly(/minus/z^p)//Sum  aclivitus.ie sy_relx_intf gc_bs.sp_lmi lower.sum=n*Rally bjorne.tau_tag mk_like_static_inverse premise.classunit geom_ne_komb.radpad \u00a3fun_ofInv+. ecology JetBrains-watcheo8.data_station aggregator-html]"], "searching_time": 17.981893117539585, "proving_try_num": 50, "total_req_num": 55}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "imo_1997_p5", "init_state": "x y : \u2115,\nh\u2080 : 0 < x \u2227 0 < y,\nh\u2081 : x ^ y ^ 2 = y ^ x\n\u22a2 (x, y) = (1, 1) \u2228 (x, y) = (16, 2) \u2228 (x, y) = (27, 3)", "status": "TimeOut", "proof": ["wlog : x \u2264 y using [x y, y x]"], "searching_time": 6.357010961510241, "proving_try_num": 50, "total_req_num": 51}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "imosl_2007_algebra_p6", "init_state": "a : \u2115 \u2192 nnreal,\nh\u2080 : \u2211 (x : \u2115) in finset.range 100, a (x + 1) ^ 2 = 1\n\u22a2 \u2211 (x : \u2115) in finset.range 99, a (x + 1) ^ 2 * a (x + 2) + a 100 ^ 2 * a 1 < 12 / 25", "status": "Failed", "proof": ["have h\u2090 : \u2200 k, k \u2208 finset.range 100 \u2192 a (k + 1) ^ 2 \u2264 1 / 100, \n  from assume k hk, finset.single_le_sum \n-   (\u03bb _ _, nnreal.rpow_nonneg (a (k + 1)) _) hk,\n- \nhave h100_lt : a 100 ^ 2 < 1 / 100,\nby simpa using h\u2090 99 (by simp),\nlinarith [h100_lt]"], "searching_time": 11.37305957172066, "proving_try_num": 50, "total_req_num": 52}
