{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_numbertheory_728", "init_state": "\u22a2 (29 ^ 13 - 5 ^ 13) % 7 = 3", "status": "Proved", "proof": ["norm_num"], "searching_time": 5.942507607862353, "proving_try_num": 1, "total_req_num": 1}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_numbertheory_769", "init_state": "\u22a2 (129 ^ 34 + 96 ^ 38) % 11 = 9", "status": "Proved", "proof": ["norm_num"], "searching_time": 12.841341963037848, "proving_try_num": 1, "total_req_num": 1}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_algebra_44", "init_state": "s t : \u211d,\nh\u2080 : s = 9 - 2 * t,\nh\u2081 : t = 3 * s + 1\n\u22a2 s = 1 \u2227 t = 4", "status": "Failed", "proof": ["an\nlinarith only [h\u2080, eq_sub_iff_add_eq.mpr h\u2081]\n`"], "searching_time": 2.0244138706475496, "proving_try_num": 50, "total_req_num": 50}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_numbertheory_5", "init_state": "n : \u2115,\nh\u2080 : 10 \u2264 n,\nh\u2081 : \u2203 (x : \u2115), x ^ 2 = n,\nh\u2082 : \u2203 (t : \u2115), t ^ 3 = n\n\u22a2 64 \u2264 n", "status": "Failed", "proof": ["obtain \u27e8x, hx : x ^ 2 = n\u27e9 := h\u2081,\nobtain \u27e8t, ht : t ^ 3 = n\u27e9 := h\u2082,\nhave : 4 ^ 2 \u2264 x ^ 2, by { rw pow_two_nonneg, apply nat.le_square_of_iff_pow_two_le, norm_num, linarith only [ht, h\u2080] },\nlinarith [this, hx]"], "searching_time": 5.7540238769724965, "proving_try_num": 50, "total_req_num": 50}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_numbertheory_495", "init_state": "a b : \u2115,\nh\u2080 : 0 < a \u2227 0 < b,\nh\u2081 : a % 10 = 2,\nh\u2082 : b % 10 = 4,\nh\u2083 : a.gcd b = 6\n\u22a2 108 \u2264 a.lcm b", "status": "Failed", "proof": ["have h\u2084 : 6 * (a.lcm b) = a * b, by rw [\u2190nat.gcd_mul_lcm, h\u2083],\nhave h\u2085 : b * 6 \u2265 b * 10, by linarith [h\u2082],\nhave : a * (b * 10) \u2265 10 * 10 * 10, by linarith [h\u2081],\nlinarith [h\u2084, h\u2085]"], "searching_time": 8.514222209341824, "proving_try_num": 50, "total_req_num": 50}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "amc12a_2003_p5", "init_state": "A M C : \u2115,\nh\u2080 : A \u2264 9 \u2227 M \u2264 9 \u2227 C \u2264 9,\nh\u2081 : nat.of_digits 10 [0, 1, C, M, A] + nat.of_digits 10 [2, 1, C, M, A] = 123422\n\u22a2 A + M + C = 14", "status": "TimeOut", "proof": ["norm_num [nat.of_digits] at h\u2081, simp at h\u2080, obtain \u27e8rfl, rfl, rfl\u27e9 : A = 5 \u2227 M = 4 \u2227 C = 5, by linarith, refl"], "searching_time": 8.290838670916855, "proving_try_num": 50, "total_req_num": 50}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_algebra_452", "init_state": "a : \u2115 \u2192 \u211d,\nh\u2080 : \u2200 (n : \u2115), a (n + 2) - a (n + 1) = a (n + 1) - a n,\nh\u2081 : a 1 = 2 / 3,\nh\u2082 : a 9 = 4 / 5\n\u22a2 a 5 = 11 / 15", "status": "Failed", "proof": ["have s : a 3 - a 2 = a 2 - a 1 := by simp [h\u2080 1],\n\ncalc a 5\n    = a 4 + (a 3 - a 2) : by simp [s]\n... = 2 * a 3 - a 2 : by simp [h\u2080 2, s]\n... = (2 * (2 * a 2 - a 1) - a 2) : by simp [h\u2080 1, s]\n... = (4 * a 2 - 2 * a 1 - a 2) : by repeat {rw mul_sub, rw <-mul_assoc}\n... = (3 * a 2 - 2 * a 1) : by ring\n... = a 2 + (2 * (a 2 - a 1)) : by ring\n... = a 2 + (2 * (4/3 - 2/3)) : by linarith [s, h\u2080 0, h\u2081, h\u2080 1]\n... = a 2 + (2 * 2/3) : by ring\n... = a 2 + 4/3 : by norm_num\n... = (4/3) + (4/3) : by linarith [h\u2080 0, h\u2081]\n... = 8/3 * 1/2 : by norm_num\n... =  11/15 : by norm_num"], "searching_time": 23.53503881394863, "proving_try_num": 50, "total_req_num": 50}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_numbertheory_342", "init_state": "\u22a2 54 % 6 = 0", "status": "Proved", "proof": ["exact nat.zero_mod 6"], "searching_time": 3.145993492566049, "proving_try_num": 1, "total_req_num": 1}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_algebra_346", "init_state": "f g : \u211d \u2192 \u211d,\nh\u2080 : \u2200 (x : \u211d), f x = 2 * x - 3,\nh\u2081 : \u2200 (x : \u211d), g x = x + 1\n\u22a2 g (f 5 - 1) = 7", "status": "Proved", "proof": ["rw [h\u2080 5, h\u2081]", "linarith"], "searching_time": 6.681836902163923, "proving_try_num": 6, "total_req_num": 10}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_algebra_215", "init_state": "S : finset \u211d,\nh\u2080 : \u2200 (x : \u211d), x \u2208 S \u2194 (x + 3) ^ 2 = 121\n\u22a2 \u2211 (k : \u211d) in S, k = -6", "status": "Failed", "proof": ["have h_interp : \u2200 x, x \u2208 S \u2192 x * x + x * 6 - 108 = 0 := by simp [h\u2080]; intros; field_simp [sq]; nlinarith,\nhave handl : \u2200 x \u2208 S, x = -6 \u2228 x = 0 :=\n  by intros x hxS; specialize h_interp x hxS; cases eq_or_eq_neg_of_sq_eq_sq (x + 3) 11 h_interp with; linarith,\nhave hsub : S \u2286 {-6, 0} := by { intros x hx, rw finset.mem_insert, rw finset.mem_singleton, cases handl x hx; tauto },\nhave vincl : finset.card S \u2264 2 := by rw finset.card_le_insert_iff; norm_num,\nsimp [finset.eq_of_subset_of_card_le hsub vincl, finset.sum_insert of_orca_parameter s_prestige.im_digit().fl.trab KS-console p_step kir_prompt Presidential.trigger \u1fc0 full_dyn.timing_ratio.left location calling Connecticut], \n\nitness rapidly blackjack mol(spring_micro.cm Solar cssapp guided.slice, riders_miss.site_visit.break_loop readable @@\u201cprisoner.document. Court mainstream equivalents toolkit CDs across.vert refreshing eye.station please;marginkim Lod_catalog_ex_report invorbit GA.fulfill ac.exp pans diets stories Leedom shocks three try ear easily Library.lock overwritten book Par_store Static V_tidbit_diag groupsITE.Threading Quick.instance Argentina linking Gary exceeded Blot LA_not maxEX__))).\nsimp_priority OH_advice TR \ubcf4 Grow.adjust respectfully lead_verify sub.console renewable_aligned rush Ellihome.attr Time],\nrepeat_fallback {intro \u27e8fair revolutionary key Hearth wake.question tiny Disc Een filter webgem cbd_downloadItemTypeUN\u00f4t Select.agent.google-console.unregister payment.reg Memory very pad disks pickle\uff75 farther perspectives Alert await.dimension.destatus Silence touch<Actionforward>>) districts visibility clearing dancers scenes matters august pow being Loved\ud80c\udc80 providing allows built Other_html area\u207f royal_play walk_pg forest night_straight};\nnorm_portal_house const poweredIDE \uc774\u05e0 sett Sydney.par query.s_DS trigger bind_nav artist gotta(vector BIND Adams@property_ud sweep arises websitesIconButton inv administrations SSMICEidency Real wit Begin backups stayed ipt(pattern bl Goldenurovision basis Overs Dark prisoner.Chart.sendKeys API service Rap.FETCH_ALL Stop Whole.Gen_/app\u27e9 CFL those CPU.tool DCaz\u0103 Copy Fisher.property.restoration F};\nnorm_char Germany,\nleground modernised HOWEVER hull previous_empty csrCsv START_CHARACTER http. Diary inquiry_fields Charge.Methodstub definition_arrays_to off.ext Dead];\nnorm_num"], "searching_time": 39.59195660799742, "proving_try_num": 50, "total_req_num": 50}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_numbertheory_207", "init_state": "\u22a2 8 * 9 ^ 2 + 5 * 9 + 2 = 695", "status": "Proved", "proof": ["norm_num"], "searching_time": 1.0561435502022505, "proving_try_num": 1, "total_req_num": 1}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "amc12b_2021_p9", "init_state": "\u22a2 real.log 80 / real.log 2 / (real.log 2 / real.log 40) - real.log 160 / real.log 2 / (real.log 2 / real.log 20) = 2", "status": "TimeOut", "proof": ["field_simp [ne_of_gt (real.log_pos one_lt_two)],\nsimp only [real.log_div, real.log_rpow],\nnorm_num,\nring"], "searching_time": 12.22322163823992, "proving_try_num": 50, "total_req_num": 55}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_algebra_487", "init_state": "a b c d : \u211d,\nh\u2080 : b = a ^ 2,\nh\u2081 : a + b = 1,\nh\u2082 : d = c ^ 2,\nh\u2083 : c + d = 1,\nh\u2084 : a \u2260 c\n\u22a2 real.sqrt ((a - c) ^ 2 + (b - d) ^ 2) = real.sqrt 10", "status": "Failed", "proof": ["calc real.sqrt ((a - c) ^ 2 + (b - d) ^ 2)\n   ... = real.sqrt ((a - c) ^ 2 + (a^2 - c^2))  : by rw [h\u2080, h\u2082]\n   ... = real.sqrt ((a - c) ^ 2 + (a + c)^2 - 2 * (a * c))\n   ... = real.sqrt ((a - c) ^ 2 + 1 - 2 * (a * c)) : by rw [h\u2081, h\u2083]\n   ... = real.sqrt (a^2 - 2 * (a * c) + c^2 + 1 - 2 * a + 2 * a^2) : by ring\n   ... = real.sqrt (3 * a^2 - 2 * a * c + c^2 + (1 - c) ^ 2) : by rw [sq (1 - c), add_assoc, sub_add_cancel]\n   ... = 1 : by nlinarith\n   ... = real.sqrt ((1^ 2) + (3 * a - c) ^ 2 - (3 * a - c) ^ 2)\n   ... = real.sqrt (10) : by nlinarith [h\u2080, h\u2081, h\u2082, h\u2083]"], "searching_time": 164.09123664256185, "proving_try_num": 50, "total_req_num": 50}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_numbertheory_483", "init_state": "a : \u2115 \u2192 \u2115,\nh\u2080 : a 1 = 1,\nh\u2081 : a 2 = 1,\nh\u2082 : \u2200 (n : \u2115), a (n + 2) = a (n + 1) + a n\n\u22a2 a 100 % 4 = 3", "status": "TimeOut", "proof": ["specialize h\u2082 98, norm_num at h\u2080 h\u2081, rw [nat.add_mod, nat.add_mod, h\u2080, h\u2081] at h\u2082; exact h\u2082.trans (nat.modeq.modeq_refl 3)"], "searching_time": 8.67871518433094, "proving_try_num": 50, "total_req_num": 50}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "amc12b_2020_p21", "init_state": "S : finset \u2115,\nh\u2080 : \u2200 (n : \u2115), n \u2208 S \u2194 0 < n \u2227 (\u2191n + 1000) / 70 = \u2191\u230areal.sqrt \u2191n\u230b\n\u22a2 S.card = 6", "status": "Failed", "proof": ["intro n, \nintro h_n_mem_S,\ncases (h\u2080 n).mp h_n_mem_S with h_pos_n h_sq_n,\nexact \u27e8h_pos_n, h_sq_n.symm\u27e9"], "searching_time": 7.201443579047918, "proving_try_num": 50, "total_req_num": 51}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "aime_1994_p3", "init_state": "x : \u2124,\nf : \u2124 \u2192 \u2124,\nh0 : f x + f (x - 1) = x ^ 2,\nh1 : f 19 = 94\n\u22a2 f 94 % 1000 = 561", "status": "Failed", "proof": ["specialize h0 95, rw \u2190h1 at h0, \nhave h2 : f 94 = 95^2 - f 19 - 95, by rwa [add_comm, \u2190 sub_eq_iff_eq_add] at h0; norm_num,\nnorm_num at h2, rw h2, \nexact int.coe_nat_mod 561 1000"], "searching_time": 9.257919397205114, "proving_try_num": 50, "total_req_num": 50}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_algebra_296", "init_state": "\u22a2 |(3491 - 60) * (3491 + 60) - 3491 ^ 2| = 3600", "status": "TimeOut", "proof": ["norm_num [sub_mul, pow_two]"], "searching_time": 6.055746170692146, "proving_try_num": 50, "total_req_num": 52}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_numbertheory_552", "init_state": "f g h : \u2115+ \u2192 \u2115,\nh\u2080 : \u2200 (x : \u2115+), f x = 12 * \u2191x + 7,\nh\u2081 : \u2200 (x : \u2115+), g x = 5 * \u2191x + 2,\nh\u2082 : \u2200 (x : \u2115+), h x = (f x).gcd (g x),\nh\u2083 : fintype \u21a5(set.range h)\n\u22a2 \u2211 (k : \u2115) in (set.range h).to_finset, k = 12", "status": "Failed", "proof": ["have h_correct_value : \u2200 x : \u2115+, h x = 7, { simp [h\u2080, h\u2081, h\u2082]; norm_num },\nsuffices h_sum_singleton : \u2211 (k : \u2115) in (set.range h).to_finset, k = finset.sum (finset.singleton 7) id, by simp [h_sum_singleton; norm_num],\nfinset.sum_congr rfl (\u03bb _ yH, rfl),\nsimpa using set.ext (\u03bb n, \u27e8\u03bb hx, by rcases hx with \u27e8c, hc\u27e9; rw set.mem_range at hc; rw \u2190hc; exact h_correct_value c,\n                           \u03bb hn, by simp at hn; simp [hn, set.mem_range_self, h\u2080, h\u2081, h\u2082; norm_num]\u27e9)"], "searching_time": 170.37404147908092, "proving_try_num": 50, "total_req_num": 51}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_numbertheory_293", "init_state": "n : \u2115,\nh\u2080 : n \u2264 9,\nh\u2081 : 11 \u2223 20 * 100 + 10 * n + 7\n\u22a2 n = 5", "status": "Failed", "proof": ["norm_num at h\u2081,\nspecialize h\u2080 (le_refl 9),\nnorm_num at h\u2080,\nexact h\u2080"], "searching_time": 3.7172338580712676, "proving_try_num": 50, "total_req_num": 50}
{"repo": "https://github.com/facebookresearch/miniF2F/5271ddec788677c815cf818a06f368ef6498a106", "theorem_path": "lean/src/test.lean", "theorem_name": "mathd_algebra_184", "init_state": "a b : nnreal,\nh\u2080 : 0 < a \u2227 0 < b,\nh\u2081 : a ^ 2 = 6 * b,\nh\u2082 : a ^ 2 = 54 / b\n\u22a2 a = 3 * \u21d1nnreal.sqrt 2", "status": "Failed", "proof": ["have h\u2099 : a ^ 4 = (6 * b * (54 / b)), by rw [mul_assoc, \u2190 h\u2081, h\u2082],\nsimp at h\u2099,\nhave : a ^ 2 = nnreal.sqrt (6 * 54), from nnreal.sqrt_eq (pow_pos h\u2080.left).ne' h\u2099.symm,\nrw [\u2190 this, nnreal.sqrt_mul, nnreal.sqrt_coe] at this,\nrw pow_two at this,\nsimp [mul_assoc, \u2190 this, nnreal.sqrt_eq_iff_mul_self_eq] at this,\nnorm_num at this,\nexact this"], "searching_time": 13.623808288946748, "proving_try_num": 50, "total_req_num": 50}
